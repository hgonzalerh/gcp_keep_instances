- name: Maintain Gcloud infra
  hosts: localhost
  gather_facts: false
  vars:
    # gcp_project: 
    # gcp_project: 
    # veeam_password: 
  module_defaults:
    ansible.builtin.uri:
      validate_certs: false

  tasks:
    - name: Get info on running instances
      google.cloud.gcp_compute_instance_info:
        zone: us-central1-a
        project: "{{ gcp_project }}"
      register: gcp_instance_info

    - name: Show running instances
      ansible.builtin.debug:
        msg: >-
              {{
              gcp_instance_info.resources
              | map(attribute='name')
              }}

    - name: Log on and get an Auth token from VEEAM backup
      ansible.builtin.uri:
        url: "https://{{ veeam_appliance_ip_port }}/api/v1/token"
        method: POST
        headers:
          Content-Type: "application/x-www-form-urlencoded"
          x-api-version: "1.3-rev0"
        body:
          grant_type: "password"
          username: "{{ veeam_username }}"
          password: "{{ veeam_password }}"
        body_format: form-urlencoded
        validate_certs: false
      register: veeam_login

    - name: Display veeam login result
      ansible.builtin.set_fact:
        veeam_access_token: "{{ veeam_login.json.access_token }}"

    - name: Get all instances managed by VEEAM
      ansible.builtin.uri:
        url: "https://{{ veeam_appliance_ip_port }}/api/v1/vmInstances"
        method: GET
        headers:
          x-api-version: "1.3-rev0"
          Authorization: "Bearer {{ veeam_access_token }}"
        validate_certs: false
      register: veeam_instances

    - name: Print instances as known by VEEAM (names only)
      ansible.builtin.debug:
        msg: "{{ veeam_instances.json.data | map(attribute='name') }}"

    - name: Print machines to RESTORE (list difference)
      ansible.builtin.debug:
        msg: >-
          {{
          (veeam_instances.json.data | map(attribute='name'))
          | difference(
          (gcp_instance_info.resources | map(attribute='name'))
          )
          }}

    - name: Print instances as known by VEEAM (full data)
      ansible.builtin.debug:
        msg: "{{ veeam_instances.json.data }}"

    - name: Print all info about one instance (use ansible-dum-cen-prbs)
      ansible.builtin.debug:
        msg: "{{ veeam_instances.json.data | selectattr('name', 'equalto', 'ansible-dum-cen-prbs') }}"

    - name: Get all restore points for every instance backed up by VEEAM
      ansible.builtin.uri:
        url: "https://{{ veeam_appliance_ip_port }}/api/v1/vmInstance/restorePoints"
        method: GET
        headers:
          x-api-version: "1.3-rev0"
          Authorization: "Bearer {{ veeam_access_token }}"
        validate_certs: false
      register: veeam_restorepoints

    - name: Get latest restorepoint for machine id corresponding to ansible-dum-cen-prbs
      ansible.builtin.set_fact:
        last_snapshot: >-
          {{ veeam_restorepoints.json.data |
          selectattr('type', 'equalto', 'Snapshot') |
          selectattr('vmInstanceId', 'equalto', '7603165133034585515') |
          sort(attribute='creationTimeUtc') |
          last
          }}

    - name: Get Veeam Service Account that's needed for operating
      ansible.builtin.uri:
        url: "https://{{ veeam_appliance_ip_port }}/api/v1/serviceAccounts"
        method: GET
        headers:
          x-api-version: "1.3-rev0"
          Authorization: "Bearer {{ veeam_access_token }}"
        validate_certs: false
      register: veeam_serviceaccounts

    - name: Print service accounts
      ansible.builtin.debug:
        msg: "{{ veeam_serviceaccounts }}"

    - name: Do a test restore of the latest restorepoint into machine id 7603165133034585515
      ansible.builtin.uri:
        url: "https://{{ veeam_appliance_ip_port }}/api/v1/vmInstance/restorePoints/{{ last_snapshot.id }}/restoreInstance"
        method: POST
        headers:
          x-api-version: "1.3-rev0"
          Authorization: "Bearer {{ veeam_access_token }}"
          Content-Type: application/json
        body_format: json
        body:
          projectId: "qa-itsm-cloud"
          # Use first service account that was found
          serviceAccountId: "{{ veeam_serviceaccounts.json.data[0].id }}"
          # INTO ORIGINAL LOCATION
          restoreToOriginal: true
        validate_certs: false
      register: veeam_restorepoints
