- name: Maintain Gcloud infra
  hosts: localhost
  gather_facts: false
  vars:
    # gcp_project: 
    # gcp_project: 
    # veeam_password: 

  tasks:
    - name: Get info on an instance
      google.cloud.gcp_compute_instance_info:
        zone: us-central1-a
        project: "{{ gcp_project }}"
      register: gcp_instance_info

    - name: Show missing instances
      ansible.builtin.debug:
        msg: >-
              {{
              gcp_instance_info.resources
              | map(attribute='name')
              }}

    - name: Get an Auth token from VEEAM backup
      ansible.builtin.uri:
        url: "https://{{ veeam_appliance_ip_port }}/api/v1/token"
        method: POST
        headers:
          Content-Type: "application/x-www-form-urlencoded"
          x-api-version: "1.3-rev0"
        body:
          grant_type: "password"
          username: "{{ veeam_username }}"
          password: "{{ veeam_password }}"
        body_format: form-urlencoded
        validate_certs: false
      register: veeam_login

    - name: Display veeam login result
      ansible.builtin.set_fact:
        veeam_access_token: "{{ veeam_login.json.access_token }}"

    - name: Get all instances manage by VEEAM
      ansible.builtin.uri:
        url: "https://{{ veeam_appliance_ip_port }}/api/v1/vmInstances"
        method: GET
        headers:
          x-api-version: "1.3-rev0"
          Authorization: "Bearer {{ veeam_access_token }}"
        validate_certs: false
      register: veeam_instances

    - name: Print instances as known by VEEAM
      ansible.builtin.debug:
        msg: "{{ veeam_instances.json.data | map(attribute='name') }}"

    - name: Print machines to RESTORE
      ansible.builtin.debug:
        msg: >-
          {{ 
          ( veeam_instances.json.data | map(attribute='name') ) 
          | difference(
          ( gcp_instance_info.resources | map(attribute='name') )
          )
          }}

    # get the ID for a machine name
    # Get all restore points for all names and filter to a single ID:
    # Find the latest restore points
    # Perfom machine restore using the latest snapshot

    - name: Print instances as known by VEEAM (full data)
      ansible.builtin.debug:
        msg: "{{ veeam_instances.json.data }}"

    - name: Select one machine by name (use ansible-dum-cen-prbs)
      ansible.builtin.debug:
        msg: "{{ veeam_instances.json.data | selectattr('name','equalto','ansible-dum-cen-prbs') }}"

    - name: Get all restore points for a single machine id  7603165133034585515
      ansible.builtin.uri:
        url: "https://{{ veeam_appliance_ip_port }}/api/v1/vmInstance/7603165133034585515/restorePoints?filter=string&orderby=string&offset=0&limit=0"
        method: GET
        headers:
          x-api-version: "1.3-rev0"
          Authorization: "Bearer {{ veeam_access_token }}"
        validate_certs: false
      register: veeam_restorepoints
    
    - name: Print restorepoints
      ansible.builtin.debug:
        var: veeam_restorepoints

    # - name: Get all registered VMs from Veeam
    #   ansible.builtin.uri:
    #     url: "https://123.123.123.123:13140/api/v1/vmInstances?filter=string&orderby=string&offset=0&limit=0"
    #     method: GET
    #     headers:
    #       Authorization: "YOUR_API_KEY_HERE"
    #       x-api-version: "1.2-rev0"
    #     return_content: true
    #     status_code: 200
    #     validate_certs: false
    #   register: veem_result

    # - name: Show veem instances
    #   ansible.builtin.debug:
    #     msg: >-
    #           {{
    #           veem_result.data
    #           | map(attribute='name')
    #           }}
